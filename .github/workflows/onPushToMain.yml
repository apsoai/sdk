name: Version, Tag and Publish to npm

on:
  push:
    branches: [main]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Ensures history is checked out for versioning

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'  # Set to your Node.js version
        registry-url: 'https://registry.npmjs.org/'
      
    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build

    - name: Bump version and tag
      id: bump_version
      uses: phips28/gh-action-bump-version@master
      with:
        tag-prefix: 'v'  # Set this to 'v' if you want your tags like 'v1.0.0'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Explicitly Create and Push Tag
      run: |
        # Configure git
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        
        # Get version from package.json
        VERSION=$(node -p "require('./package.json').version")
        TAG="v$VERSION"
        
        echo "Creating and pushing tag: $TAG"
        
        # Check if tag exists locally
        if git rev-parse "$TAG" >/dev/null 2>&1; then
          echo "Tag $TAG already exists locally, skipping tag creation"
        else
          # Create tag
          git tag "$TAG" -m "Release $TAG"
        fi
        
        # Check if tag exists on remote
        if git ls-remote --tags origin | grep -q "refs/tags/$TAG$"; then
          echo "Tag $TAG already exists on remote, skipping tag push"
        else
          # Push tag to remote
          git push origin "$TAG"
        fi
      
    - name: Debug Version Output
      run: echo "New tag is ${{ steps.bump_version.outputs.new_tag }}"
      
    - name: Create GitHub Release
      run: |
        if [ -n "${{ steps.bump_version.outputs.new_tag }}" ]; then
          gh release create "${{ steps.bump_version.outputs.new_tag }}" \
            --title "Release ${{ steps.bump_version.outputs.new_tag }}" \
            --generate-notes
        else
          echo "No new tag was created, skipping release creation"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup NPM Authentication
      run: |
        echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc
        cat ~/.npmrc
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
    
    - name: Publish to npm
      run: |
        npm config set access public
        npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}

